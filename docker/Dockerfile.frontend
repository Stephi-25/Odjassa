# Stage 1: Build the React application
FROM node:18-alpine AS builder
WORKDIR /app

# Copy package.json and package-lock.json from the frontend directory
COPY frontend/package.json frontend/package-lock.json* ./

# Install dependencies
# Ensure a .dockerignore file at the project root excludes host node_modules
RUN npm install --legacy-peer-deps

# Copy the rest of the frontend application code into /app
COPY frontend/ ./

# Set the API URL (can be overridden at build time)
# For local docker-compose with Nginx proxy, /api/v1 is fine.
# For separate deployments, this needs to be the full backend URL.
ARG REACT_APP_API_URL=/api/v1
ENV REACT_APP_API_URL=${REACT_APP_API_URL}

# Build the application (output will be in /app/build)
# Assumes 'build' script in frontend/package.json outputs to 'build' directory
RUN npm run build

# Stage 2: Serve the static files using Nginx
FROM nginx:stable-alpine
WORKDIR /usr/share/nginx/html

# Remove default Nginx static assets
RUN rm -rf ./*

# Copy static assets from builder stage's /app/build directory
COPY --from=builder /app/build .

# Optional: Copy a custom Nginx configuration for React Router and API proxy
# Ensure this nginx.conf exists in the specified path relative to the build context (project root)
# For example, if you create docker/nginx.conf:
# COPY docker/nginx.conf /etc/nginx/conf.d/default.conf
#
# Example nginx.conf for React Router & API Proxy (if REACT_APP_API_URL=/api/v1):
# server {
#   listen 80;
#   root /usr/share/nginx/html;
#   index index.html index.htm;
#
#   location / {
#     try_files $uri /index.html;
#   }
#
#   location /api/v1/ {
#     # Assumes your backend service in docker-compose is named 'backend' and runs on port 4000
#     proxy_pass http://backend:4000/api/v1/;
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     # WebSocket support (if needed by your API, e.g., for notifications)
#     # proxy_http_version 1.1;
#     # proxy_set_header Upgrade $http_upgrade;
#     # proxy_set_header Connection "upgrade";
#   }
# }

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
